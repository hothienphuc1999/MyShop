<Application x:Class="MyShop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MyShop"
             StartupUri="LoginWindow.xaml"
             ShutdownMode="OnLastWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <Color x:Key="bg-primary">#007bff</Color>
            <Color x:Key="primary-light">#4da3ff</Color>
            <Color x:Key="bg-secondary">#6c757d</Color>
            <Color x:Key="bg-success">#28a745</Color>
            <Color x:Key="bg-danger">#dc3545</Color>
            <Color x:Key="danger-light">#d4616c</Color>
            <Color x:Key="bg-warning">#ffc107</Color>
            <Color x:Key="bg-info">#17a2b8</Color>
            <Color x:Key="bg-light">#f8f9fa</Color>
            <Color x:Key="bg-dark">#343a40</Color>
            <Color x:Key="bg-white">#ffffff</Color>
            <SolidColorBrush x:Key="primary-brush" Color="{StaticResource bg-primary}" />
            <SolidColorBrush x:Key="primary-light-brush" Color="{StaticResource primary-light}" />
            <SolidColorBrush x:Key="scondary-brush" Color="{StaticResource bg-secondary}"/>
            <SolidColorBrush x:Key="success-brush" Color="{StaticResource bg-success}"/>
            <SolidColorBrush x:Key="light-brush" Color="{StaticResource bg-light}"/>
            <SolidColorBrush x:Key="dark-brush" Color="{StaticResource bg-dark}"/>
            <SolidColorBrush x:Key="white-brush" Color="{StaticResource bg-white}"/>
            <SolidColorBrush x:Key="warning-brush" Color="{StaticResource bg-warning}"/>
            <SolidColorBrush x:Key="danger-brush" Color="{StaticResource bg-danger}"/>
            <SolidColorBrush x:Key="danger-light-brush" Color="{StaticResource danger-light}"/>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource scondary-brush}"/>
                <Setter Property="Background" Value="{StaticResource light-brush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource scondary-brush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="ButtonBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3" Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"
                                    Width="{TemplateBinding Width}">
                                <ContentControl Content="{TemplateBinding Property=Content}" 
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource light-brush}"/>
                        <Setter Property="Background" Value="{StaticResource primary-brush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource primary-brush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource primary-light-brush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="defaultButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource primary-brush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource primary-brush}"/>
            </Style>
            <Style x:Key="cancelButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource danger-brush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource danger-brush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource light-brush}"/>
                        <Setter Property="Background" Value="{StaticResource danger-brush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource danger-brush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource danger-light-brush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3" 
                                    Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"
                                    Width="{TemplateBinding Width}">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource primary-light-brush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type PasswordBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3" 
                                    Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"
                                    Width="{TemplateBinding Width}">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource primary-light-brush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboboxToggleButtonTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
                            BorderThickness="1" 
                            BorderBrush="{StaticResource scondary-brush}"
                            CornerRadius="3" 
                            Background="{StaticResource light-brush}"/>
                    <Border Grid.Column="1" Margin="2" Name="ButtonBorder"
                            BorderThickness="0"
                            Background="{StaticResource light-brush}"/>
                    <Path   Name="Arrow" Grid.Column="1" 
                            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                            HorizontalAlignment="Center" Fill="#444"
                            VerticalAlignment="Center"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                        <Setter Property="Border.BorderBrush" TargetName="Border" Value="{StaticResource primary-brush}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                        <Setter Property="Border.BorderBrush" TargetName="Border" Value="{StaticResource success-brush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                                            ClickMode="Press" Focusable="False"
                                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            Template="{StaticResource ComboboxToggleButtonTemplate}"/>
                                <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                    HorizontalAlignment="Left" VerticalAlignment="Center"                              
                                    Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
                                        Visibility="Hidden" Background="Transparent"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <Popup Name="Popup" Placement="Bottom"
                                    Focusable="False" AllowsTransparency="True"
                                    IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                    PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                            CornerRadius="0 0 3 3" BorderThickness="1,1,1,1" 
                                            BorderBrush="{StaticResource scondary-brush}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource scondary-brush}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListViewItem">
                <Setter Property="Foreground" Value="{StaticResource scondary-brush}"/>
                <Setter Property="Background" Value="{StaticResource light-brush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border Name="BorderItemListView"
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3" Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"
                                    Width="{TemplateBinding Width}"
                                    Margin="5">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource light-brush}"></Setter>
                                    <Setter Property="Background" Value="White"></Setter>
                                    <Setter TargetName="BorderItemListView" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Color="#FF484545" 
                                                Opacity="0.4" 
                                                Direction="0" ShadowDepth="0" 
                                                RenderingBias="Quality"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
